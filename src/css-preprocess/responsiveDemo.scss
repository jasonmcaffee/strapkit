@import "src/css-preprocess/_variables";
@import "src/css-preprocess/media-queries";
@import "src/css-preprocess/colors";
@import "src/css-preprocess/rounded-corners";
@import "src/css-preprocess/core/lists";
@import "src/css-preprocess/util/position-fixes";
@import "src/css-preprocess/core/grids";

.money{
  &:before{
    content:'$'
  }
}



#responsive-page{
   //background-color: blue;
   width:100%;

  #masterDetailListsGrid{
    @extend .inline-block-grid;//

    //cell 1
    #masterList{  //ul
      //base type
      @extend .list-type-1;
      @extend .inline-block-grid-cell; //

      //mouse devices
      cursor: pointer;

      //small screens - make it easier to see and interact with the data.
      @include mq(small){
        //sizing
        width:100%;

        //font
        font-size: 150%;

        //further extend .list-type-1
        li{
          padding:7px;
        }
      }

      //medium screens and above - collapse masterList and detailList so they are side by side.
      @include mq(medium-and-above){
        width: 30%;
      }
    }//#masterList

    //cell 2
    #detailList{  //ul
      //base type
      @extend .list-type-1;
      @extend .inline-block-grid-cell;

      //mouse devices
      cursor: pointer;

      @include mq(small){
        width:100%;
      }

      @include mq(medium-and-above){
        width: 70%;
      }

      //li has several items in it, represented as dl dt, as to avoid confusion
      li{

        //each dl is considered a flexible grid, with each dt being a grid cell
        dl{ //grid
          @extend .inline-block-grid;

          dt{ //grid cell
            @extend .inline-block-grid-cell;

            @include mq(small){
              width:100% !important; //need to override the nth-child widths
            }

          }

          //cell 1
          dt:nth-child(1){
            //sizing
            width:50%;
            font-style: italic;
          }

          //cell 2
          dt:nth-child(2){
            @extend .money; //this cell

            //sizing
            width:20%;

            @include mq(medium-and-above){
              text-align: right;
            }
          }

          //cell 3
          dt:nth-child(3){
            width:30%;

            @include mq(medium-and-above){
              text-align: right;
            }
          }
        }
      }//li
    }//#detailList
  }//masterDetailListGrid


  #masterDetailListsGrid2{
    @extend .flex-box-grid;//the masterList and detailList are considered cells in this grid

    //when there is limited real-estate, stack the cells vertically (block-axis)
    @include mq(small){
      @include box-orient(vertical);
    }

    //cell 1
    #masterList2{  //ul
      //base type
      @extend .list-type-1;

      //flex box
      @include box-ordinal-group(2);//demo changing order of elements. puts details in front of master, even though master html comes first.

      //mouse devices
      cursor: pointer;

      //small screens - make it easier to see and interact with the data.
      @include mq(small){
        //sizing
        width:100%;

        //font
        font-size: 150%;

        //further extend .list-type-1
        li{
          padding:7px;
        }
      }

      //medium screens and above - collapse masterList and detailList so they are side by side.
      @include mq(medium-and-above){
        width: 30%;
      }
    }//#masterList

    //cell 2
    #detailList2{  //ul
      //base type
      @extend .list-type-1;

      //flex box
      @include box-ordinal-group(1);//demo changing order of elements. puts details in front of master, even though master html comes first.

      //mouse devices
      cursor: pointer;

      @include mq(small){
        width:100%;
      }

      @include mq(medium-and-above){
        width: 70%;
        //@include box-flex(1);//
      }

      //li has several items in it, represented as dl dt, as to avoid confusion
      li{

        //each dl is considered a flexible grid, with each dt being a grid cell
        dl{ //grid
          @extend .flex-box-grid;
          //@extend .inline-block-grid; //extending both causes flex box ordinal to stop working.

          dt{ //grid cell
            //@extend .inline-block-grid-cell;
          }

          //cell 1
          dt:nth-child(1){ //item description
            //sizing
            //width:50%;
            font-style: italic;

            @include mq(medium-and-above){
              //positioning
              @include box-ordinal-group(3);

              //size
              width:50%;
            }
          }

          //cell 2
          dt:nth-child(2){ //amount
            @extend .money; //this cell

            //sizing
            //width:20%;

            @include mq(medium-and-above){
              //positioning
              @include box-ordinal-group(1);

              //size
              width:50%;

              text-align: right;

            }
          }

          //cell 3
          dt:nth-child(3){  //date
            //width:30%;

            @include mq(medium-and-above){
              //positioning
              @include box-ordinal-group(2);
              text-align: right;
            }
          }
        }
      }//li
    }//#detailList
  }//masterDetailListGrid2


}//end responsive-page